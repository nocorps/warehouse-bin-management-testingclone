<Application x:Class="WarehouseManagement.Desktop.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             StartupUri="Views/LoginWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- Material Design Themes -->
                <materialDesign:BundledTheme BaseTheme="Light" PrimaryColor="Blue" SecondaryColor="Orange" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                
                <!-- Custom Application Styles -->
                <ResourceDictionary Source="Styles/ApplicationStyles.xaml" />
                <ResourceDictionary Source="Styles/ButtonStyles.xaml" />
                <ResourceDictionary Source="Styles/DataGridStyles.xaml" />
                <ResourceDictionary Source="Styles/CardStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!-- Global Application Styles -->
            <Style TargetType="Window">
                <Setter Property="WindowState" Value="Maximized"/>
                <Setter Property="WindowStartupLocation" Value="CenterScreen"/>
                <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"/>
                <Setter Property="FontFamily" Value="Segoe UI"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="UseLayoutRounding" Value="True"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
                <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
            </Style>

            <!-- High-Performance DataGrid Style -->
            <Style x:Key="HighPerformanceDataGrid" TargetType="DataGrid" BasedOn="{StaticResource MaterialDesignDataGrid}">
                <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
                <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling"/>
                <Setter Property="VirtualizingPanel.IsContainerVirtualizable" Value="True"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="EnableRowVirtualization" Value="True"/>
                <Setter Property="EnableColumnVirtualization" Value="True"/>
                <Setter Property="ClipboardCopyMode" Value="None"/>
                <Setter Property="SelectionMode" Value="Extended"/>
                <Setter Property="GridLinesVisibility" Value="Horizontal"/>
                <Setter Property="HeadersVisibility" Value="Column"/>
                <Setter Property="CanUserAddRows" Value="False"/>
                <Setter Property="CanUserDeleteRows" Value="False"/>
                <Setter Property="AutoGenerateColumns" Value="False"/>
                <Setter Property="IsReadOnly" Value="True"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignDivider}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="RowHeight" Value="30"/>
                <Setter Property="ColumnHeaderHeight" Value="35"/>
                <Setter Property="Margin" Value="8"/>
            </Style>

            <!-- Performance-Optimized ListBox -->
            <Style x:Key="VirtualizedListBox" TargetType="ListBox">
                <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
                <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Loading Spinner Style -->
            <Style x:Key="LoadingSpinner" TargetType="ProgressBar">
                <Setter Property="IsIndeterminate" Value="True"/>
                <Setter Property="Height" Value="4"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Style>

            <!-- Status Card Style -->
            <Style x:Key="StatusCard" TargetType="materialDesign:Card">
                <Setter Property="Margin" Value="8"/>
                <Setter Property="Padding" Value="16"/>
                <Setter Property="UniformCornerRadius" Value="8"/>
                <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth2"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignDivider}"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Style>

            <!-- Action Button Style -->
            <Style x:Key="ActionButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                <Setter Property="Height" Value="36"/>
                <Setter Property="Margin" Value="4"/>
                <Setter Property="Padding" Value="16,0"/>
                <Setter Property="FontWeight" Value="Medium"/>
            </Style>

            <!-- Primary Action Button -->
            <Style x:Key="PrimaryActionButton" TargetType="Button" BasedOn="{StaticResource ActionButton}">
                <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                <Setter Property="Foreground" Value="White"/>
            </Style>

            <!-- Secondary Action Button -->
            <Style x:Key="SecondaryActionButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignOutlinedButton}">
                <Setter Property="Height" Value="36"/>
                <Setter Property="Margin" Value="4"/>
                <Setter Property="Padding" Value="16,0"/>
                <Setter Property="FontWeight" Value="Medium"/>
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
            </Style>

            <!-- Icon Button Style -->
            <Style x:Key="IconButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignIconButton}">
                <Setter Property="Width" Value="40"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="Margin" Value="4"/>
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
            </Style>

            <!-- Text Styles -->
            <Style x:Key="PageTitle" TargetType="TextBlock">
                <Setter Property="FontSize" Value="24"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                <Setter Property="Margin" Value="0,0,0,16"/>
            </Style>

            <Style x:Key="SectionTitle" TargetType="TextBlock">
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                <Setter Property="Margin" Value="0,16,0,8"/>
            </Style>

            <Style x:Key="MetricValue" TargetType="TextBlock">
                <Setter Property="FontSize" Value="28"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
            </Style>

            <Style x:Key="MetricLabel" TargetType="TextBlock">
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="FontWeight" Value="Medium"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBodyLight}"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
            </Style>

            <!-- Input Styles -->
            <Style x:Key="FormTextBox" TargetType="TextBox" BasedOn="{StaticResource MaterialDesignOutlinedTextBox}">
                <Setter Property="Margin" Value="0,8"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>

            <Style x:Key="FormComboBox" TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignOutlinedComboBox}">
                <Setter Property="Margin" Value="0,8"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>

            <!-- Animation Resources -->
            <Storyboard x:Key="FadeInAnimation">
                <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.3"/>
            </Storyboard>

            <Storyboard x:Key="SlideInFromRight">
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" 
                                From="50" To="0" Duration="0:0:0.3">
                    <DoubleAnimation.EasingFunction>
                        <QuarticEase EasingMode="EaseOut"/>
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.3"/>
            </Storyboard>

            <!-- Color Resources -->
            <SolidColorBrush x:Key="SuccessColor" Color="#4CAF50"/>
            <SolidColorBrush x:Key="WarningColor" Color="#FF9800"/>
            <SolidColorBrush x:Key="ErrorColor" Color="#F44336"/>
            <SolidColorBrush x:Key="InfoColor" Color="#2196F3"/>
            
            <!-- Status Colors -->
            <SolidColorBrush x:Key="AvailableStatusColor" Color="#4CAF50"/>
            <SolidColorBrush x:Key="OccupiedStatusColor" Color="#FF9800"/>
            <SolidColorBrush x:Key="BlockedStatusColor" Color="#F44336"/>
            <SolidColorBrush x:Key="ReservedStatusColor" Color="#9C27B0"/>

            <!-- Performance Metrics Colors -->
            <SolidColorBrush x:Key="HighUtilizationColor" Color="#F44336"/>
            <SolidColorBrush x:Key="MediumUtilizationColor" Color="#FF9800"/>
            <SolidColorBrush x:Key="LowUtilizationColor" Color="#4CAF50"/>

            <!-- Converters -->
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            
        </ResourceDictionary>
    </Application.Resources>
</Application>
